//! SeaORM Entity. Generated by sea-orm-codegen 0.4.1

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Serialize, Deserialize)]
#[sea_orm(table_name = "sys_model_info")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub model_id: i32,
    pub model_category_id: i32,
    #[sea_orm(unique)]
    pub model_name: String,
    pub model_title: String,
    pub model_pk: String,
    pub model_order: String,
    pub model_sort: Option<String>,
    pub model_list: Option<String>,
    pub model_edit: Option<String>,
    pub model_indexes: Option<String>,
    pub search_list: Option<String>,
    pub create_time: i64,
    pub update_time: i64,
    pub model_status: i8,
    pub model_engine: String,
    pub create_by: String,
    pub update_by: String,
}

#[derive(Copy, Clone, Debug, EnumIter)]
pub enum Relation {}

impl RelationTrait for Relation {
    fn def(&self) -> RelationDef {
        panic!("No RelationDef")
    }
}

impl ActiveModelBehavior for ActiveModel {}
